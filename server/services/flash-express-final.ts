/**
 * ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ Flash Express ‡∏â‡∏ö‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á
 */
import axios from 'axios';
import crypto from 'crypto';

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Flash Express API
const FLASH_EXPRESS_API_URL = 'https://open-api-tra.flashexpress.com';
const FLASH_EXPRESS_MCH_ID = process.env.FLASH_EXPRESS_MERCHANT_ID;
const FLASH_EXPRESS_API_KEY = process.env.FLASH_EXPRESS_API_KEY;

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ timeout ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API
const API_TIMEOUT = 15000; // 15 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á nonceStr
function generateNonceStr(length = 16): string {
  const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';
  let result = '';
  for (let i = 0; i < length; i++) {
    result += chars.charAt(Math.floor(Math.random() * chars.length));
  }
  return result;
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Flash Express ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡πà‡∏á‡∏Ñ‡∏£‡∏±‡∏î
 * 1. ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ (ASCII)
 * 2. ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö key1=value1&key2=value2
 * 3. ‡πÄ‡∏û‡∏¥‡πà‡∏° API key ‡∏ó‡∏µ‡πà‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡∏ï‡∏£‡∏¥‡∏á: stringToSign + "&key=" + apiKey
 * 4. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤ SHA-256 ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà
 */
function generateFlashSignature(params: Record<string, any>, apiKey: string): string {
  try {
    console.log('‚öôÔ∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô...');
    
    // 1. ‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô string ‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏á‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå
    const stringParams: Record<string, string> = {};
    Object.keys(params).forEach(key => {
      // Flash Express API ‡∏°‡∏µ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡πâ‡∏≤‡∏°‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
      const skipParams = [
        'sign', 
        'subItemTypes', 
        'merchantId',    // ‡πÉ‡∏ä‡πâ mchId ‡πÅ‡∏ó‡∏ô
        'subParcel',     // ‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
        'subParcelQuantity', // ‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
        'remark'         // ‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö orders API
      ];
      
      if (skipParams.includes(key)) return;
      
      // ‡∏Ç‡πâ‡∏≤‡∏°‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô null, undefined ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
      if (params[key] === null || params[key] === undefined || params[key] === '') return;
      
      // ‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô string
      stringParams[key] = String(params[key]);
    });

    // 2. ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏µ‡∏¢‡πå‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ASCII
    const sortedKeys = Object.keys(stringParams).sort();

    // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
    const stringToSign = sortedKeys
      .map(key => `${key}=${stringParams[key]}`)
      .join('&');
    
    // 4. ‡πÄ‡∏û‡∏¥‡πà‡∏° API key ‡∏ó‡∏µ‡πà‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡∏ï‡∏£‡∏¥‡∏á
    const signString = `${stringToSign}&key=${apiKey}`;
    
    console.log('üîë ‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô:', signString);
    
    // 5. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤ SHA-256 ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà
    const signature = crypto.createHash('sha256')
      .update(signString)
      .digest('hex')
      .toUpperCase();
    
    console.log('‚úÖ ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ:', signature);
    
    return signature;
  } catch (error: any) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô:', error.message);
    throw new Error(`Failed to generate signature: ${error.message}`);
  }
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á Flash Express API
 */
function createBaseRequestParams() {
  const nonceStr = generateNonceStr();
  const timestamp = Math.floor(Date.now() / 1000).toString();
  
  return {
    mchId: FLASH_EXPRESS_MCH_ID as string,
    nonceStr: nonceStr,
    timestamp: timestamp
  };
}

/**
 * ‡∏î‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
 */
export async function getShippingOptions(originAddress: any, destinationAddress: any, packageDetails: any) {
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API
    if (!FLASH_EXPRESS_MCH_ID || !FLASH_EXPRESS_API_KEY) {
      throw new Error('Flash Express API credentials not configured');
    }
    
    console.log(`üöö ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å Flash Express...`);
    console.log(`üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏±‡∏™‡∏î‡∏∏: ${packageDetails.weight} ‡∏Å‡∏Å.`);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    const requestParams = {
      ...createBaseRequestParams(),
      fromPostalCode: originAddress.zipcode,
      toPostalCode: destinationAddress.zipcode,
      weight: String(Math.round(packageDetails.weight * 1000)), // ‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å ‡∏Å‡∏Å. ‡πÄ‡∏õ‡πá‡∏ô ‡∏Å‡∏£‡∏±‡∏°
      height: String(Math.round(packageDetails.height || 0)), 
      length: String(Math.round(packageDetails.length || 0)),
      width: String(Math.round(packageDetails.width || 0))
    };
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
    const signature = generateFlashSignature(requestParams, FLASH_EXPRESS_API_KEY as string);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    requestParams.sign = signature;
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô URL-encoded string
    const encodedPayload = new URLSearchParams(requestParams as Record<string, string>).toString();
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ headers
    const headers = {
      'Content-Type': 'application/x-www-form-urlencoded',
      'Accept': 'application/json',
      'X-Flash-Signature': signature,
      'X-Flash-Timestamp': requestParams.timestamp,
      'X-Flash-Nonce': requestParams.nonceStr
    };
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ API
    const response = await axios.post(
      `${FLASH_EXPRESS_API_URL}/open/v1/orders/estimate_rate`,
      encodedPayload,
      { headers, timeout: API_TIMEOUT }
    );
    
    console.log('‚úÖ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢:', response.data);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    if (response.data && response.data.code === 1) {
      return {
        success: true,
        estimatePrice: response.data.data.estimatePrice,
        currency: 'THB',
        serviceInfo: response.data.data
      };
    } else {
      return {
        success: false,
        error: response.data?.message || 'Unknown error',
        errorCode: response.data?.code
      };
    }
  } catch (error: any) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á:', error.message);
    
    return {
      success: false,
      error: error.message,
      errorResponse: error.response?.data
    };
  }
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏•‡∏Ç‡∏û‡∏±‡∏™‡∏î‡∏∏‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏±‡∏ö Flash Express
 */
export async function createShipment(shipmentData: any) {
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API
    if (!FLASH_EXPRESS_MCH_ID || !FLASH_EXPRESS_API_KEY) {
      throw new Error('Flash Express API credentials not configured');
    }
    
    console.log(`üöö ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏•‡∏Ç‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏Å‡∏±‡∏ö Flash Express...`);
    console.log(`üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏±‡∏™‡∏î‡∏∏: ${shipmentData.weight} ‡∏Å‡∏Å., ‡∏à‡∏≤‡∏Å ${shipmentData.senderAddress.province} ‡∏ñ‡∏∂‡∏á ${shipmentData.recipientAddress.province}`);
    
    // ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤ "0" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ
    const senderPhone = shipmentData.senderPhone.startsWith('0') 
      ? shipmentData.senderPhone 
      : `0${shipmentData.senderPhone}`;
      
    const recipientPhone = shipmentData.recipientPhone.startsWith('0') 
      ? shipmentData.recipientPhone 
      : `0${shipmentData.recipientPhone}`;
    
    // 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á API (‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏° remark)
    const requestParams = {
      ...createBaseRequestParams(),
      outTradeNo: shipmentData.orderNumber,
      warehouseNo: `${FLASH_EXPRESS_MCH_ID}_001`, // ‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà Flash Express ‡∏Å‡∏≥‡∏´‡∏ô‡∏î
      
      // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á
      srcName: shipmentData.senderName,
      srcPhone: senderPhone,
      srcProvinceName: shipmentData.senderAddress.province,
      srcCityName: shipmentData.senderAddress.district,
      srcDistrictName: shipmentData.senderAddress.subdistrict,
      srcPostalCode: shipmentData.senderAddress.zipcode,
      srcDetailAddress: shipmentData.senderAddress.address,
      
      // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
      dstName: shipmentData.recipientName,
      dstPhone: recipientPhone,
      dstProvinceName: shipmentData.recipientAddress.province, 
      dstCityName: shipmentData.recipientAddress.district,
      dstDistrictName: shipmentData.recipientAddress.subdistrict,
      dstPostalCode: shipmentData.recipientAddress.zipcode,
      dstDetailAddress: shipmentData.recipientAddress.address,
      
      // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏±‡∏™‡∏î‡∏∏
      articleCategory: String(shipmentData.articleCategory || 1), // ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
      expressCategory: String(shipmentData.expressCategory || 1), // ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏õ‡∏Å‡∏ï‡∏¥
      parcelKind: String(shipmentData.parcelKind || 1), // ‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏õ‡∏Å‡∏ï‡∏¥
      weight: String(Math.round(shipmentData.weight * 1000)), // ‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å ‡∏Å‡∏Å. ‡πÄ‡∏õ‡πá‡∏ô ‡∏Å‡∏£‡∏±‡∏°
      width: String(Math.round(shipmentData.width || 0)),
      length: String(Math.round(shipmentData.length || 0)),
      height: String(Math.round(shipmentData.height || 0)),
      insured: String(shipmentData.insured || 0), // ‡πÑ‡∏°‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô
      codEnabled: String(shipmentData.codEnabled || 0), // ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ COD
      // ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà remark ‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ
    };
    
    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
    const signature = generateFlashSignature(requestParams, FLASH_EXPRESS_API_KEY as string);
    
    // 3. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    requestParams.sign = signature;
    
    // 4. ‡πÄ‡∏û‡∏¥‡πà‡∏° remark ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß
    requestParams.remark = shipmentData.remark || '';
    
    // 5. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö subItemTypes ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á sign
    if (shipmentData.items && shipmentData.items.length > 0) {
      const subItemTypes = shipmentData.items.map((item: any) => ({
        itemName: item.name,
        itemQuantity: item.quantity
      }));
      requestParams.subItemTypes = JSON.stringify(subItemTypes);
    } else {
      // ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      const defaultItem = [{
        itemName: '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
        itemQuantity: 1
      }];
      requestParams.subItemTypes = JSON.stringify(defaultItem);
    }
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô URL-encoded string
    const encodedPayload = new URLSearchParams();
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô URL-encoded string
    for (const [key, value] of Object.entries(requestParams)) {
      if (value !== undefined && value !== null) {
        encodedPayload.append(key, String(value));
      }
    }
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ headers
    const headers = {
      'Content-Type': 'application/x-www-form-urlencoded',
      'Accept': 'application/json',
      'X-Flash-Signature': signature,
      'X-Flash-Timestamp': requestParams.timestamp,
      'X-Flash-Nonce': requestParams.nonceStr
    };
    
    console.log('üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Flash Express API...');
    console.log('üîó URL:', `${FLASH_EXPRESS_API_URL}/open/v3/orders`);
    console.log('üìã Headers:', JSON.stringify(headers, null, 2));
    console.log('üìù Payload:', encodedPayload.toString());
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ API
    const response = await axios.post(
      `${FLASH_EXPRESS_API_URL}/open/v3/orders`,
      encodedPayload.toString(),
      { headers, timeout: API_TIMEOUT }
    );
    
    console.log('‚úÖ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å API:', response.data);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    if (response.data && response.data.code === 1) {
      // ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      return {
        success: true,
        trackingNumber: response.data.data.pno,
        sortCode: response.data.data.sortCode,
        shipmentData: response.data.data
      };
    } else {
      // ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      return {
        success: false,
        error: response.data?.message || 'Unknown error',
        errorCode: response.data?.code,
        responseData: response.data
      };
    }
  } catch (error: any) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏•‡∏Ç‡∏û‡∏±‡∏™‡∏î‡∏∏:', error.message);
    
    if (error.response) {
      console.error('‚ùå Response status:', error.response.status);
      console.error('‚ùå Response data:', error.response.data);
    }
    
    return {
      success: false,
      error: error.message,
      errorResponse: error.response?.data
    };
  }
}

/**
 * ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏±‡∏™‡∏î‡∏∏
 */
export async function trackShipment(trackingNumber: string) {
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API
    if (!FLASH_EXPRESS_MCH_ID || !FLASH_EXPRESS_API_KEY) {
      throw new Error('Flash Express API credentials not configured');
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    const requestParams = {
      ...createBaseRequestParams(),
      pno: trackingNumber
    };
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
    const signature = generateFlashSignature(requestParams, FLASH_EXPRESS_API_KEY as string);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    requestParams.sign = signature;
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô URL-encoded string
    const encodedPayload = new URLSearchParams(requestParams as Record<string, string>).toString();
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ headers
    const headers = {
      'Content-Type': 'application/x-www-form-urlencoded',
      'Accept': 'application/json',
      'X-Flash-Signature': signature,
      'X-Flash-Timestamp': requestParams.timestamp,
      'X-Flash-Nonce': requestParams.nonceStr
    };
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ API
    const response = await axios.post(
      `${FLASH_EXPRESS_API_URL}/open/v1/tracking/query`,
      encodedPayload,
      { headers, timeout: API_TIMEOUT }
    );
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    if (response.data && response.data.code === 1) {
      return {
        success: true,
        trackingData: response.data.data
      };
    } else {
      return {
        success: false,
        error: response.data?.message || 'Unknown error',
        errorCode: response.data?.code
      };
    }
  } catch (error: any) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏û‡∏±‡∏™‡∏î‡∏∏:', error.message);
    
    return {
      success: false,
      error: error.message,
      errorResponse: error.response?.data
    };
  }
}

// ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö API
export async function testApi() {
  try {
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á
    const estimateResult = await getShippingOptions(
      { zipcode: '10110' }, // ‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á
      { zipcode: '50000' },  // ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
      { weight: 1, width: 10, length: 10, height: 10 } // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏±‡∏™‡∏î‡∏∏
    );
    
    console.log('üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á:', estimateResult);
    
    return estimateResult;
  } catch (error: any) {
    console.error('‚ùå ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error.message);
    return { success: false, error: error.message };
  }
}