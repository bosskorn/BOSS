/**
 * ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö Flash Express API ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£
 */
import axios from 'axios';
import crypto from 'crypto';

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Flash Express API
const FLASH_EXPRESS_API_URL = 'https://open-api-tra.flashexpress.com';
const FLASH_EXPRESS_API_KEY = process.env.FLASH_EXPRESS_API_KEY;

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Flash Express
function generateFlashSignature(params: Record<string, any>, apiKey: string): string {
  try {
    console.log('‚öôÔ∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô Flash Express API...');
    
    // 0. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ API key ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!apiKey) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö API Key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô');
      throw new Error('API Key is required for signature generation');
    }

    // 1. ‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô string ‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏á‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå
    const stringParams: Record<string, string> = {};
    Object.keys(params).forEach(key => {
      // ‡∏Ç‡πâ‡∏≤‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå sign ‡πÅ‡∏•‡∏∞ subItemTypes (‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô)
      if (key === 'sign' || key === 'subItemTypes' || key === 'merchantId') return;
      
      // ‡∏Ç‡πâ‡∏≤‡∏°‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô null, undefined ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
      if (params[key] === null || params[key] === undefined || params[key] === '') return;
      
      // ‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô string
      stringParams[key] = String(params[key]);
    });

    // 2. ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏µ‡∏¢‡πå‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ASCII
    const sortedKeys = Object.keys(stringParams).sort();

    // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
    const stringToSign = sortedKeys
      .map(key => `${key}=${stringParams[key]}`)
      .join('&') + `&key=${apiKey}`;

    console.log('üîë ‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô:', stringToSign);

    // 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á SHA-256 hash ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà
    const signature = crypto.createHash('sha256').update(stringToSign).digest('hex').toUpperCase();

    console.log('üîí ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á:', signature);
    
    return signature;
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô Flash Express:', error);
    throw error;
  }
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏î‡πÜ
 */
async function testCreateShippingExact() {
  try {
    console.log('üß™ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Flash Express API ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á EXACT...');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API
    if (!FLASH_EXPRESS_API_KEY) {
      throw new Error('Flash Express API credentials not configured');
    }
    
    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤ - ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö exact ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ
    const exampleData = {
      mchId: 'AAXXXX', // ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏°‡∏≤‡∏ï‡∏£‡∏á‡πÜ
      nonceStr: '1536749552628',
      outTradeNo: '123456789XXXX',
      warehouseNo: 'AAXXXX_001',
      srcName: '‡∏´‡∏≠‡∏°‡∏£‡∏ß‡∏°  create order test name',
      srcPhone: '0123456789',
      srcProvinceName: '‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
      srcCityName: '‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
      srcDistrictName: '‡πÉ‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á',
      srcPostalCode: '34000',
      srcDetailAddress: 'example detail address',
      dstName: '‡∏ô‡πâ‡∏≥‡∏û‡∏£‡∏¥‡∏Å‡πÅ‡∏°‡πà‡∏≠‡∏≥‡∏û‡∏£',
      dstPhone: '0123456789',
      dstHomePhone: '0123456789',
      dstProvinceName: '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà',
      dstCityName: '‡∏™‡∏±‡∏ô‡∏ó‡∏£‡∏≤‡∏¢',
      dstDistrictName: '‡∏™‡∏±‡∏ô‡∏û‡∏£‡∏∞‡πÄ‡∏ô‡∏ï‡∏£',
      dstPostalCode: '50210',
      dstDetailAddress: 'example detail address',
      returnName: '‡∏ô‡πâ‡∏≥‡∏û‡∏£‡∏¥‡∏Å‡πÅ‡∏°‡πà‡∏≠‡∏≥‡∏û‡∏£',
      returnPhone: '0123456789',
      returnProvinceName: '‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
      returnCityName: '‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
      returnPostalCode: '34000',
      returnDetailAddress: 'example detail address',
      articleCategory: 1,
      expressCategory: 1,
      weight: 1000,
      insured: 1,
      insureDeclareValue: 10000,
      opdInsureEnabled: 1,
      codEnabled: 1,
      codAmount: 10000,
      subParcelQuantity: 2,
      // ‡πÑ‡∏°‡πà‡∏°‡∏µ timestamp ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    };
    
    // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    console.log('‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
    console.log('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô:', JSON.stringify(exampleData, null, 2));
    const signature1 = generateFlashSignature(exampleData, FLASH_EXPRESS_API_KEY as string);
    console.log('‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á (‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1):', signature1);
    console.log('‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:', 'D4515A46B6094589F1F7615ADCC988FBB03A79010F2A206DC982F27D396F93A0');
    
    console.log('\n-----------------------------------------------------------------------\n');
    
    // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
    console.log('‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
    const sortedParams: Record<string, any> = {};
    Object.keys(exampleData)
      .filter(key => key !== 'sign' && key !== 'subItemTypes' && key !== 'subParcelQuantity')
      .sort()
      .forEach(key => {
        sortedParams[key] = exampleData[key];
      });
    
    console.log('‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£:', JSON.stringify(sortedParams, null, 2));
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
    const stringParts: string[] = [];
    for (const key in sortedParams) {
      stringParts.push(`${key}=${sortedParams[key]}`);
    }
    
    const stringToSign = stringParts.join('&') + `&key=${FLASH_EXPRESS_API_KEY}`;
    console.log('‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô:', stringToSign);
    
    const signature2 = crypto.createHash('sha256').update(stringToSign).digest('hex').toUpperCase();
    console.log('‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á (‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2):', signature2);
    
    console.log('\n-----------------------------------------------------------------------\n');
    
    // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 3: ‡πÉ‡∏ä‡πâ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏°‡∏≤‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    console.log('‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 3: ‡πÉ‡∏ä‡πâ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏°‡∏≤‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á');
    const targetSignature = 'D4515A46B6094589F1F7615ADCC988FBB03A79010F2A206DC982F27D396F93A0';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á API
    const requestData = { 
      ...exampleData,
      sign: targetSignature
    };
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° subParcel ‡πÅ‡∏•‡∏∞ subItemTypes
    requestData.subParcel = JSON.stringify([
      {
        "outTradeNo": "123456789XXXX1",
        "weight": 21,
        "width": 21,
        "length": 21,
        "height": 12,
        "remark": "remark1"
      },
      {
        "outTradeNo": "123456789XXXX2",
        "weight": 21,
        "width": 21,
        "length": 21,
        "height": 21,
        "remark": "remark2"
      }
    ]);
    
    requestData.subItemTypes = JSON.stringify([
      {
        "itemName": "item name description",
        "itemWeightSize": "1*1*1 1Kg",
        "itemColor": "red",
        "itemQuantity": "1"
      },
      {
        "itemName": "item name description",
        "itemWeightSize": "2*2*2 1Kg",
        "itemColor": "blue",
        "itemQuantity": "2"
      }
    ]);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° remark
    requestData.remark = '‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏±‡∏ô‡πÑ‡∏î';
    
    console.log('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á API:', JSON.stringify(requestData, null, 2));
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô URL-encoded string
    const formData = new URLSearchParams();
    for (const [key, value] of Object.entries(requestData)) {
      formData.append(key, value as string);
    }
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ headers
    const headers = {
      'Content-Type': 'application/x-www-form-urlencoded',
      'Accept': 'application/json',
      'X-Flash-Signature': targetSignature,
      'X-Flash-Nonce': exampleData.nonceStr
    };
    
    console.log('Headers:', JSON.stringify(headers, null, 2));
    console.log('URL-encoded Form data:', formData.toString());
    
    // ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    console.log('INFO: ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• mchId ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á');
    
    return {
      success: true,
      message: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô'
    };
  } catch (error: any) {
    console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:', error.message);
    return { success: false, error: error.message };
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
async function runTest() {
  console.log('========================= Flash Express API Test (EXACT) =========================');
  try {
    await testCreateShippingExact();
  } catch (error) {
    console.error('‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
  }
  console.log('=========================== Test Complete ===========================');
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
runTest();