การอ้างอิงความปลอดภัย
วิธีการสร้างลายเซ็น
วิธีการสร้างลายเซ็นมีขั้นตอนดังต่อไปนี้:

ก. สมมติว่ามีข้อมูล Request ดังต่อไปนี้

mchId: AAXXXX
nonceStr: yyv6YJP436wCkdpNdghC
body: test
ข. จัดรูปแบบพารามิเตอร์ด้วยรูปแบบ "key = value" จากนั้นจัดเรียงตามรหัส ASCII ของชื่อพารามิเตอร์ โดยเรียงจากค่าน้อยไปมาก

stringA="body=test&mchId=AAXXXX&nonceStr=yyv6YJP436wCkdpNdghC"
ค. นำผลจากข้อ ข. มาต่อท้ายด้วย secret_key ตามรูปแบบด้านล่าง:

stringSignTemp=stringA+"&key=96fe12c2e61a85d59de7cc8c279b00b9ce310e2bf55ffacd70665a17b10eb8f6" //หมายเหตุ:secret_key ทางแฟลชจะเป็นคนมอบให้

sign=sha256(stringSignTemp).toUpperCase()="7FE0E6EB255BE3277FC781E8E25F492549A1D4E65C2CE1C97B337E461A0830DE" // หมายเหตุ:เข้ารหัสลายเซ็นด้วย SHA256
ง. นำผลลัพธ์จากข้อ ค. ไปไว้ใน Request ตามรูปแบบด้านล่างดังนี้:

mchId: AAXXXX
nonceStr: yyv6YJP436wCkdpNdghC
body: test
sign: 7FE0E6EB255BE3277FC781E8E25F492549A1D4E65C2CE1C97B337E461A0830DE
ขั้นตอนแรกคือการตั้งค่าข้อมูลทั้งหมดที่ส่งหรือรับเป็นชุด M และจัดเรียงพารามิเตอร์โดยนำค่าพารามิเตอร์ที่ไม่เป็นค่าว่างไว้ในชุด M โดยตามรหัส ASCII ของชื่อพารามิเตอร์จากเล็กไปใหญ่ โดยใช้ URL รูปแบบคีย์พารามิเตอร์ - ค่าพารามิเตอร์ (เช่น key1 = value1 & key2 = value2 … `) มาต่อเป็นสตริง

หมายเหตุ:

เรียงชื่อพารามิเตอร์ตาม ASCII code โดยเรียงจากเล็กไปใหญ่ (dictionary order)

หากค่าพารามิเตอร์ที่เป็นค่าว่างจะไม่นำมาคำนวณในการสร้างลายเซ็น

ชื่อพารามิเตอร์พิจารณาตัวอักขระเล็กและใหญ่ต่างกันเช่น A ≠ a

หากได้รับการตอบกลับว่า "การเซ็นลายมือชือล้มเหลว" หมายถึงค่าพารามิเตอร์ sign ไม่ถูกต้อง

จะต้องรองรับหากมีการเพิ่มพารามิเตอร์ที่เกี่ยวข้องหรือไม่เกี่ยวข้องก็ตาม

ขั้นตอนที่สอง, นำ stringA มาต่อด้วย secret_key และเก็บไว้ที่ stringSignTemp จากนั้นนำมาเข้ารหัสด้วย SHA256 จะได้เป็น stringSignTemp และจากนั้นนำผลลัพธ์มาทำเป็นตัวพิมพ์ใหญ่ทั้งหมด และมีชื่อพารามิเตอร์ว่า "sign"

หมายเหตุโปรดติดต่อเจ้าหน้าที่ Product เพื่อขอรับ secret_key ในการใช้งาน
ข้อสังเกต
อนุญาตให้ค่าพารามิเตอร์เป็นค่าว่างสามารถส่งผ่านแต่จะไม่นำมาคำนวณตอนสร้างลายเซ็น

/* สมมติว่าพารามิเตอร์ของbodyมีค่าเท่ากับค่าว่าง */
body = " \t\n"

/* จะไม่นำพารามิเตอร์ body มาคำนวณลายเซ็นแต่จะสามารถส่งค่าพารามิเตอร์ body มาให้ทางแฟลชได้ */
body=%20%09%0A&mchId=AAXXXX&nonceStr=yyv6YJP436wCkdpNdghC&sign=7FE0E6EB255BE3277FC781E8E25F492549A1D4E65C2CE1C97B337E461A0830DE
หากเป็นค่าว่างจะยังสามารถส่งไปยังแฟลชได้ตามปกติ แต่จะต้องไม่นำมาคำนวณลายเซ็น และค่าว่างหมายถึงสตริงที่ประกอบด้วยอักขระเว้นวรรคทั้งหมดดังนี้:
\u0009 HORIZONTAL TABULATION \t

\u000A LINE FEED \n

\u000B VERTICAL TABULATION

\u000C FORM FEED \f

\u000D ENTER \r

\u001C FILE SEPARATOR

\u001D GROUP SEPARATOR

\u001E RECORD SEPARATOR

\u001F UNIT SEPARATOR

เมื่อข้อมูลมีการคำนวณลายเซ็นเรียบร้อยแล้วจะต้องมีการเข้ารหัส url ก่อนที่จะส่งไปให้แฟลช

/* สมมติว่า body พารามิเตอร์มีข้อมูลตามด้านล่างนี้ */
body = "Lisa&Ruby"

/* request body */
body=Lisa%26Ruby&mchId=AAXXXX&nonceStr=yyv6YJP436wCkdpNdghC&sign=F5668026A2FE79509A53B523D10E742D05667BE20F4ECDFA844E41C5068797A0
โปรดใช้ application/x-www-form-urlencoded และโปรดใช้ urlencode() ในทุกๆพารามิเตอร์
คำนวณลายเซ็นก่อนเรียกใช้ฟังก์ชั่น urlencode() ในขณะเดียวกันทางแฟลชก็จะมีการเรียกใช้ urldecode() หลังจากนั้นจึงตรวจสอบลายเซ็น
Random nonce string algorithm
พารามิเตอร์ nonceStr มีไว้เพื่อให้แน่ใจว่าลายเซ็นจะไม่สามารถคาดเดาได้โดยง่าย
คำแนะนำ:สร้างข้อมูลโดยใช้ฟังก์ชั่นการสุ่ม หลังจากนั้นแปลงข้อมูลเป็น String